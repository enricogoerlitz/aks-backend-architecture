---
apiVersion: v1
kind: Secret
metadata:
  name: redis-password
type: Opaque
stringData:
  password: "password"  # Change this to your desired password
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-cluster-config
data:
  redis.conf: |
    port 6379
    cluster-enabled yes
    cluster-config-file /data/nodes.conf
    cluster-node-timeout 5000
    appendonly yes
    protected-mode no
    requirepass ${REDIS_PASSWORD}
    masterauth ${REDIS_PASSWORD}
---
apiVersion: v1
kind: Service
metadata:
  name: redis-cluster-headless
  labels:
    app: redis-cluster
spec:
  ports:
  - port: 6379
    targetPort: 6379
    name: client
  - port: 16379
    targetPort: 16379
    name: gossip
  clusterIP: None
  selector:
    app: redis-cluster
---
apiVersion: v1
kind: Service
metadata:
  name: redis-cluster
  labels:
    app: redis-cluster
spec:
  type: LoadBalancer
  ports:
  - port: 6379
    targetPort: 6379
    name: client
  selector:
    app: redis-cluster
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-cluster
spec:
  serviceName: redis-cluster-headless
  replicas: 3
  selector:
    matchLabels:
      app: redis-cluster
  template:
    metadata:
      labels:
        app: redis-cluster
    spec:
      containers:
      - name: redis
        image: redis:7.0-alpine
        command: ["redis-server", "/conf/redis.conf"]
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-password
              key: password
        ports:
        - containerPort: 6379
          name: client
        - containerPort: 16379
          name: gossip
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - redis-cli -a "$REDIS_PASSWORD" ping
          initialDelaySeconds: 15
          timeoutSeconds: 5
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        volumeMounts:
        - name: conf
          mountPath: /conf
        - name: data
          mountPath: /data
      volumes:
      - name: conf
        configMap:
          name: redis-cluster-config
          defaultMode: 0644
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
---
# A manual job to create the cluster when all pods are ready
apiVersion: batch/v1
kind: Job
metadata:
  name: redis-cluster-init
spec:
  ttlSecondsAfterFinished: 100
  backoffLimit: 0
  template:
    spec:
      containers:
      - name: redis-cluster-init
        image: redis:7.0-alpine
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-password
              key: password
        command:
        - sh
        - -c
        - |
          # Wait for all pods to be ready
          echo "Waiting for Redis pods to be ready..."
          sleep 30
          
          # Create the Redis cluster with 3 nodes
          echo "Creating Redis cluster..."
          redis-cli --cluster create \
            redis-cluster-0.redis-cluster-headless.default.svc.cluster.local:6379 \
            redis-cluster-1.redis-cluster-headless.default.svc.cluster.local:6379 \
            redis-cluster-2.redis-cluster-headless.default.svc.cluster.local:6379 \
            -a "$REDIS_PASSWORD" \
            --cluster-replicas 2 --cluster-yes
          
          # Check cluster status
          echo "Checking cluster status..."
          redis-cli -h redis-cluster-0.redis-cluster-headless.default.svc.cluster.local -a "$REDIS_PASSWORD" cluster info
      restartPolicy: Never