name: explore-aks-backend-app-air

# RUN: docker compose -f air.docker-compose.yml up --build

services:
  flyway-db-migration-job:
    platform: linux/amd64
    container_name: backend-app-flyway-db-migration-job
    build:
      context: ../../backend/database/migration-service
      dockerfile: ../../../docker/backend/database/migration-service/flyway-migration-service.Dockerfile
    environment:
      FLYWAY_URL: jdbc:postgresql://database-service:5432/database
      FLYWAY_USER: postgres
      FLYWAY_PASSWORD: password
      FLYWAY_SCHEMAS: public
    command: ["python", "scripts/flyway.py", "migrate"]
    volumes:
      - ../../backend/database/migration-service:/app
    networks:
      - app_network

  app:
    container_name: backend-app-air
    build:
      context: ../../backend/app
      dockerfile: ../../docker/backend/app/air.Dockerfile
    ports:
      - "8080:8080"
    environment:
      MODE: debug # debug, release
      DB_TYPE: POSTGRESQL
      DB_WRITE_HOST: database-service
      DB_WRITE_PORT: 5432
      DB_WRITE_USER: postgres
      DB_WRITE_PASSWORD: password
      DB_READ_HOST: database-service
      DB_READ_PORT: 5432
      DB_READ_USER: postgres
      DB_READ_PASSWORD: password
      DB_NAME: database
      CACHE_TYPE: REDIS_SINGLE_NODE # REDIS_SINGLE_NODE, REDIS_CLUSTER
      CACHE_HOSTS: redis-cache-service:6379
      CACHE_PORT: 6379
      CACHE_USER: default
      CACHE_PASSWORD: password
      CACHE_TTL: 3600
    depends_on:
      - database-service
    networks:
      - app_network
    volumes:
      - ../../backend/app:/app
      - /app/bin
      - /app/air.log

  database-service:
    image: postgres:15-alpine
    container_name: backend-app-database-service
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: database
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app_network

  redis-cache-service:
    image: redis:7.4-alpine
    container_name: backend-app-redis-cache-service
    environment:
      - REDIS_PASSWORD=password
      - REDIS_USER=default
    command: ["redis-server", "--requirepass", "password"]
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app_network

volumes:
  redis-data:
  postgres-data:

networks:
  app_network:
    driver: bridge
